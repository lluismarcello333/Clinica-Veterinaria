{"ast":null,"code":"var _jsxFileName = \"/home/luiz/Documentos/TopQueen/top-queen-frontend/src/pages/client-Checkout/ClientCheckout.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport CartComponent from '../../components/cart/Cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientCheckout = ({\n  onContinueShopping\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [cart, setCart] = useState([]); // Inicialize o estado local do carrinho\n\n  // Atualizar a visibilidade do carrinho com base na presença de produtos no carrinho\n  useEffect(() => {\n    setCart(cartFromAppState); // Substitua \"cartFromAppState\" pela lógica apropriada\n  }, [cartFromAppState]); // Substitua \"cartFromAppState\" pelo estado apropriado do carrinho no componente App\n\n  const handleSendWhatsAppMessage = () => {\n    // Lógica para criar a mensagem do WhatsApp com os produtos do carrinho e abrir o aplicativo\n    let message = `Olá! Estou interessado nos seguintes produtos:\\n`;\n    cart.forEach(product => {\n      message += `${product.title} - R$${product.price}\\n`;\n    });\n    const whatsappNumber = \"5521965502519\";\n    const whatsappURL = `https://wa.me/${whatsappNumber}?text=${encodeURIComponent(message)}`;\n    window.open(whatsappURL, \"_blank\");\n  };\n  const total = cart.reduce((totalCart, product) => {\n    var _product$quantity;\n    return totalCart + product.price * ((_product$quantity = product.quantity) !== null && _product$quantity !== void 0 ? _product$quantity : 1);\n  }, 0);\n  return (\n    /*#__PURE__*/\n    /*     <div>\n          <div className=\"cart-title\">Meu Carrinho</div>\n          <hr />\n          <table className=\"cart-products-table\">\n            <tbody>\n              {cart.map((product) => (\n                <tr key={product.id}>\n                  <td>\n                    <img src={product.image[0]} alt={product.title} />\n                  </td>\n                  <td>\n                    <strong className=\"strong_title\">{product.title}</strong>\n                  </td>\n                  <td className=\"td_price\">R${product.price}</td>\n                  <td>\n                    <DeleteForeverIcon\n                      className=\"delete_icon\"\n                      onClick={() => dispatch(removeProduct(product))}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <hr />\n          <div className=\"cart-total-container\">\n            <div className=\"cart-total\" data-testid=\"total\">\n              Total: ${total}\n            </div>\n          </div>\n          <div className=\"buttons_finished\">\n            <button className=\"finish-button\">\n              <Link\n                className=\"link-button\"\n                to=\"/produtos\"\n                onClick={onContinueShopping}\n              >\n                Continuar comprando\n              </Link>\n            </button>\n            <button className=\"finish-button\" onClick={handleSendWhatsAppMessage}>\n              Finalizar Compra\n            </button>\n          </div>\n        </div> */\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CartComponent, {\n        cart: cart // Passe o estado local do carrinho para o componente de carrinho\n        ,\n        onContinueShopping: onContinueShopping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(ClientCheckout, \"BVFX8+8Iz0B5T8Jm+agPkUq+IRU=\", false, function () {\n  return [useDispatch];\n});\n_c = ClientCheckout;\nexport default ClientCheckout;\nvar _c;\n$RefreshReg$(_c, \"ClientCheckout\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","CartComponent","jsxDEV","_jsxDEV","ClientCheckout","onContinueShopping","_s","dispatch","cart","setCart","cartFromAppState","handleSendWhatsAppMessage","message","forEach","product","title","price","whatsappNumber","whatsappURL","encodeURIComponent","window","open","total","reduce","totalCart","_product$quantity","quantity","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/luiz/Documentos/TopQueen/top-queen-frontend/src/pages/client-Checkout/ClientCheckout.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Products } from \"../../data/products\";\nimport { useDispatch } from 'react-redux';\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport { Link } from \"react-router-dom\";\nimport { removeProduct } from \"../../redux/Cart/cart-slice\";\nimport CartComponent from '../../components/cart/Cart';\n\ninterface CartProps {\n  onContinueShopping: () => void;\n}\n\nconst ClientCheckout: React.FC<CartProps> = ({ onContinueShopping }) => {\n  const dispatch = useDispatch();\n  const [cart, setCart] = useState<Products[]>([]); // Inicialize o estado local do carrinho\n\n\n  // Atualizar a visibilidade do carrinho com base na presença de produtos no carrinho\n  useEffect(() => {\n    setCart(cartFromAppState); // Substitua \"cartFromAppState\" pela lógica apropriada\n  }, [cartFromAppState]); // Substitua \"cartFromAppState\" pelo estado apropriado do carrinho no componente App\n\n  const handleSendWhatsAppMessage = () => {\n    // Lógica para criar a mensagem do WhatsApp com os produtos do carrinho e abrir o aplicativo\n    let message = `Olá! Estou interessado nos seguintes produtos:\\n`;\n\n    cart.forEach((product) => {\n      message += `${product.title} - R$${product.price}\\n`;\n    });\n    const whatsappNumber = \"5521965502519\";\n    const whatsappURL = `https://wa.me/${whatsappNumber}?text=${encodeURIComponent(\n      message\n    )}`;\n\n    window.open(whatsappURL, \"_blank\");\n  };\n\n  const total = cart.reduce((totalCart, product) => {\n    return totalCart + product.price * (product.quantity ?? 1);\n  }, 0);\n\n  return (\n/*     <div>\n      <div className=\"cart-title\">Meu Carrinho</div>\n      <hr />\n      <table className=\"cart-products-table\">\n        <tbody>\n          {cart.map((product) => (\n            <tr key={product.id}>\n              <td>\n                <img src={product.image[0]} alt={product.title} />\n              </td>\n              <td>\n                <strong className=\"strong_title\">{product.title}</strong>\n              </td>\n              <td className=\"td_price\">R${product.price}</td>\n              <td>\n                <DeleteForeverIcon\n                  className=\"delete_icon\"\n                  onClick={() => dispatch(removeProduct(product))}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <hr />\n      <div className=\"cart-total-container\">\n        <div className=\"cart-total\" data-testid=\"total\">\n          Total: ${total}\n        </div>\n      </div>\n      <div className=\"buttons_finished\">\n        <button className=\"finish-button\">\n          <Link\n            className=\"link-button\"\n            to=\"/produtos\"\n            onClick={onContinueShopping}\n          >\n            Continuar comprando\n          </Link>\n        </button>\n        <button className=\"finish-button\" onClick={handleSendWhatsAppMessage}>\n          Finalizar Compra\n        </button>\n      </div>\n    </div> */\n    <div>\n      <CartComponent\n        cart={cart} // Passe o estado local do carrinho para o componente de carrinho\n        onContinueShopping={onContinueShopping}\n      />\n    </div>\n  );\n};\n\nexport default ClientCheckout;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,WAAW,QAAQ,aAAa;AAIzC,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvD,MAAMC,cAAmC,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAa,EAAE,CAAC,CAAC,CAAC;;EAGlD;EACAC,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,gBAAgB,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC,CAAC,CAAC;;EAExB,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;IACtC;IACA,IAAIC,OAAO,GAAI,kDAAiD;IAEhEJ,IAAI,CAACK,OAAO,CAAEC,OAAO,IAAK;MACxBF,OAAO,IAAK,GAAEE,OAAO,CAACC,KAAM,QAAOD,OAAO,CAACE,KAAM,IAAG;IACtD,CAAC,CAAC;IACF,MAAMC,cAAc,GAAG,eAAe;IACtC,MAAMC,WAAW,GAAI,iBAAgBD,cAAe,SAAQE,kBAAkB,CAC5EP,OACF,CAAE,EAAC;IAEHQ,MAAM,CAACC,IAAI,CAACH,WAAW,EAAE,QAAQ,CAAC;EACpC,CAAC;EAED,MAAMI,KAAK,GAAGd,IAAI,CAACe,MAAM,CAAC,CAACC,SAAS,EAAEV,OAAO,KAAK;IAAA,IAAAW,iBAAA;IAChD,OAAOD,SAAS,GAAGV,OAAO,CAACE,KAAK,KAAAS,iBAAA,GAAIX,OAAO,CAACY,QAAQ,cAAAD,iBAAA,cAAAA,iBAAA,GAAI,CAAC,CAAC;EAC5D,CAAC,EAAE,CAAC,CAAC;EAEL;IAAA;IACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACItB,OAAA;MAAAwB,QAAA,eACExB,OAAA,CAACF,aAAa;QACZO,IAAI,EAAEA,IAAK,CAAC;QAAA;QACZH,kBAAkB,EAAEA;MAAmB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;AAEV,CAAC;AAACzB,EAAA,CAlFIF,cAAmC;EAAA,QACtBJ,WAAW;AAAA;AAAAgC,EAAA,GADxB5B,cAAmC;AAoFzC,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}