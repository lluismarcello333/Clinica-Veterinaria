{"ast":null,"code":"/* import { createSlice } from \"@reduxjs/toolkit\";\nimport { Products } from \"../../data/products\";\n\ninterface CartState {\n  cart: Products[];\n}\n\nconst initialState: CartState = {\n  cart: [],\n};\n\nexport const cartSlice = createSlice({\n  initialState,\n  name: \"cart\",\n  reducers: {\n    addProduct: (state, action) => {\n      state.cart = [...state.cart, action.payload];\n    },\n    removeProduct: (state, action) => {\n      const productToRemove = action.payload;\n      const cartFiltered = state.cart.filter(\n        (product) => product.id !== productToRemove.id\n      );\n      state.cart = cartFiltered;\n    },\n  },\n});\n\nexport const {addProduct, removeProduct} = cartSlice.actions; */","map":{"version":3,"names":[],"sources":["/home/luiz/Documentos/TopQueen/top-queen-frontend/src/redux/Cart/cart-slice.ts"],"sourcesContent":["/* import { createSlice } from \"@reduxjs/toolkit\";\nimport { Products } from \"../../data/products\";\n\ninterface CartState {\n  cart: Products[];\n}\n\nconst initialState: CartState = {\n  cart: [],\n};\n\nexport const cartSlice = createSlice({\n  initialState,\n  name: \"cart\",\n  reducers: {\n    addProduct: (state, action) => {\n      state.cart = [...state.cart, action.payload];\n    },\n    removeProduct: (state, action) => {\n      const productToRemove = action.payload;\n      const cartFiltered = state.cart.filter(\n        (product) => product.id !== productToRemove.id\n      );\n      state.cart = cartFiltered;\n    },\n  },\n});\n\nexport const {addProduct, removeProduct} = cartSlice.actions; */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}