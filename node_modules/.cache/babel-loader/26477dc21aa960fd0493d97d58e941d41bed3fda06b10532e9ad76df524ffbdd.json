{"ast":null,"code":"import \"./ProductCard.css\";\n\n/* interface ProductCardProps {\n  product?: Products;\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\n  const { cart } = useSelector(\n    (rootReducer: RootReducer) => rootReducer.cartReducer\n  );\n  const dispatch = useDispatch();\n\n  // Variável booleana para informar se o produto está no carrinho\n  const isProductOnCart =\n    cart.find((productOnCart) => product.id === productOnCart.id) !== undefined;\n\n  function handleAddProductToCart() {\n    //Despachar a Action de adicionar o produto no carrinho\n    dispatch(addProduct(product));\n  }\n\n  function handleRemoveProductFromCart() {\n    dispatch(removeProduct(product));\n  }\n\n  if (!product) {\n    return <div>Nenhum produto disponível</div>;\n  }\n\n  return (\n    <div className=\"card\">\n      <img className=\"product_image\" src={product.image} alt={product.title} />\n      <h2 className=\"product_title\">{product.title}</h2>\n      <div className=\"card_container\">\n        <span className=\"card_review\">\n          {Array.from({ length: 5 }).map((_, index) =>\n            index < Math.round(product.rating.rate) ? (\n              <AiFillStar className=\"card_svg\" key={index} />\n            ) : (\n              <AiOutlineStar className=\"card_svg\" key={index} />\n            )\n          )}\n          ({product.rating.rate})\n        </span>\n        <strong>R${product.price}</strong>\n      </div>\n      <button className=\"card_AddToCartButtonWrapper\">\n        {isProductOnCart ? (\n          <button\n            className=\"card_RemoveFromCartButton\"\n            onClick={handleRemoveProductFromCart}\n          >\n            Remover do carrinho\n            <FiShoppingCart className=\"card_buttonSVG\" />\n          </button>\n        ) : (\n          <button\n            className=\"card_AddToCardButton\"\n            onClick={handleAddProductToCart}\n          >\n            Adicionar ao carrinho\n            <FiShoppingCart className=\"card_buttonSVG\" />\n          </button>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default ProductCard;\n */","map":{"version":3,"names":[],"sources":["/home/luiz/Documentos/TopQueen/top-queen-frontend/src/components/productCard/ProductCard.tsx"],"sourcesContent":["import React from \"react\";\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootReducer } from \"../../redux/root-reducer\";\nimport { cartReducer } from \"../../redux/Cart/cart-reducer\";\nimport { addProduct, removeProduct } from \"../../redux/Cart/cart-slice\";\nimport { Products } from \"../../data/products\";\nimport \"./ProductCard.css\";\n\n/* interface ProductCardProps {\n  product?: Products;\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\n  const { cart } = useSelector(\n    (rootReducer: RootReducer) => rootReducer.cartReducer\n  );\n  const dispatch = useDispatch();\n\n  // Variável booleana para informar se o produto está no carrinho\n  const isProductOnCart =\n    cart.find((productOnCart) => product.id === productOnCart.id) !== undefined;\n\n  function handleAddProductToCart() {\n    //Despachar a Action de adicionar o produto no carrinho\n    dispatch(addProduct(product));\n  }\n\n  function handleRemoveProductFromCart() {\n    dispatch(removeProduct(product));\n  }\n\n  if (!product) {\n    return <div>Nenhum produto disponível</div>;\n  }\n\n  return (\n    <div className=\"card\">\n      <img className=\"product_image\" src={product.image} alt={product.title} />\n      <h2 className=\"product_title\">{product.title}</h2>\n      <div className=\"card_container\">\n        <span className=\"card_review\">\n          {Array.from({ length: 5 }).map((_, index) =>\n            index < Math.round(product.rating.rate) ? (\n              <AiFillStar className=\"card_svg\" key={index} />\n            ) : (\n              <AiOutlineStar className=\"card_svg\" key={index} />\n            )\n          )}\n          ({product.rating.rate})\n        </span>\n        <strong>R${product.price}</strong>\n      </div>\n      <button className=\"card_AddToCartButtonWrapper\">\n        {isProductOnCart ? (\n          <button\n            className=\"card_RemoveFromCartButton\"\n            onClick={handleRemoveProductFromCart}\n          >\n            Remover do carrinho\n            <FiShoppingCart className=\"card_buttonSVG\" />\n          </button>\n        ) : (\n          <button\n            className=\"card_AddToCardButton\"\n            onClick={handleAddProductToCart}\n          >\n            Adicionar ao carrinho\n            <FiShoppingCart className=\"card_buttonSVG\" />\n          </button>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default ProductCard;\n */\n\n"],"mappings":"AAQA,OAAO,mBAAmB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}